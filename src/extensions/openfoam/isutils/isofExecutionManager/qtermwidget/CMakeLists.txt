
cmake_minimum_required ( VERSION 3.10 )
include(CheckFunctionExists)

#| Project
project ( qtermwidget )


find_package ( Qt5Widgets REQUIRED )
#include ( ${CMAKE_BINARY_DIR} ) # For including the heades generated by ui files


#| Sources
set ( SRCS
    BlockArray.cpp
    ColorScheme.cpp
    Emulation.cpp
    Filter.cpp
    History.cpp
    KeyboardTranslator.cpp
    konsole_wcwidth.cpp
    kprocess.cpp
    kpty.cpp
    kptydevice.cpp
    kptyprocess.cpp
    Pty.cpp
    qtermwidget.cpp
    Screen.cpp
    ScreenWindow.cpp
    Session.cpp
    ShellCommand.cpp
    TerminalCharacterDecoder.cpp
    TerminalDisplay.cpp
    tools.cpp
    Vt102Emulation.cpp
)

#| Headers
#| 	Only the Headers that need to be moc'd go here
set ( HDRS
    Emulation.h
    Filter.h
    kprocess.h
    kptydevice.h
    kptyprocess.h
    Pty.h
    qtermwidget.h
    ScreenWindow.h
    Session.h
    TerminalDisplay.h
    Vt102Emulation.h
)


#| Defines
add_definitions ( -DHAVE_POSIX_OPENPT -DHAVE_SYS_TIME_H )
#add_definitions( -DHAVE_GETPT )
if (APPLE)
    add_definitions( -DHAVE_UTMPX -D_UTMPX_COMPAT )
endif (APPLE)

CHECK_FUNCTION_EXISTS(updwtmpx HAVE_UPDWTMPX)
if (HAVE_UPDWTMPX)
    add_definitions( -DHAVE_UPDWTMPX )
endif (HAVE_UPDWTMPX)


#| Create the Library
#add_library( qtermwidget STATIC ${SRCS} ${MOC_SRCS} )
add_library ( qtermwidget SHARED ${SRCS} config_files.qrc)



#| Library Properties
#set_target_properties ( qtermwidget
#       PROPERTIES
#	SOVERSION ${qtermwidget_VERSION_MAJOR}
#	VERSION ${qtermwidget_VERSION}
#)

target_link_libraries ( qtermwidget Qt5::Widgets )

install(TARGETS qtermwidget DESTINATION lib)


