FROM ubuntu:24.04

# change random output to trigger rebuild from here
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get clean; rm -rf /var/lib/apt/lists/*; apt-get clean
RUN apt-get update

RUN apt-get --no-install-recommends install -y ca-certificates


RUN apt-get --ignore-missing install -y software-properties-common apt-utils
RUN apt-key adv --fetch-keys http://downloads.silentdynamics.de/SD_REPOSITORIES_PUBLIC_KEY.gpg
#RUN add-apt-repository http://downloads.silentdynamics.de/ubuntu
#RUN apt-get update

# general build requirements
RUN apt-get clean; rm -rf /var/lib/apt/lists/*; apt-get clean; apt-get update; apt-get install --ignore-missing -y build-essential fakeroot devscripts git cmake swig python-is-python3 python-dev-is-python3 libpython3-dev libsm-dev libfreetype6-dev libxmu-dev libxi-dev gcc-10 g++-10 gfortran-10 gfortran libshiboken2-dev python3-pyside2.* pyside2-tools libcoin-runtime libcoin-dev libxerces-c3.2 libeigen3-dev libpyside2-dev libssl-dev tzdata libproj-dev libscotch-dev libptscotch-dev libmetis-dev ibopenmpi-dev tcl8.6-dev tk8.6-dev flex '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxkbcommon-dev libxkbcommon-x11-dev libosmesa6-dev libparmetis-dev libpoppler-cpp-dev patch grace tk libglu1-mesa libxcursor-dev  libopenblas-dev  libsuperlu-dev  python3-numpy xterm libhdf5-dev nedit bison rsync libgmp-dev libmpfr-dev clang libminizip-dev libminizip1 ninja-build libc++-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev libgstreamer-plugins-good1.0-dev libgstreamer1.0-dev libalsaplayer-dev libunwind-dev

RUN ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
RUN dpkg-reconfigure --frontend noninteractive tzdata

RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 20 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 10 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 20 && \
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-13 10 && \
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-10 20 && \
    update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 && \
    update-alternatives --set cc /usr/bin/gcc && \
    update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 && \
    update-alternatives --set c++ /usr/bin/g++ 

RUN apt-get install -y locales # python in CA
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN rm /bin; mkdir /bin; ln -s /usr/bin/* /bin # all in one command
RUN rm /bin/bash; mv /usr/bin/bash /bin # wrong shebang in as_run otherwise

# === setup user
ARG USER=docker
ARG UID=1000
ARG GID=1000
ARG PW=docker
RUN useradd -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd
USER ${UID}:${GID}

