
#include "base/linearalgebra.h"
#include "base/resultset.h"
#include "base/resultelements/contourchart.h"

using namespace insight;

int main(int, char*[])
{
  ResultSetPtr res = std::make_shared<ResultSet>(*ParameterSet::create(), "Chart Renderer Test", "");

  arma::mat x = arma::linspace(0, M_PI, 50);
  arma::mat y = sin(pow(x,2));

  addPlot(res, ".", "testChart",
          "$x$", "$\\sin(x^2)$",
          {
            PlotCurve(x, y, "testcurve", PlotCurveStyle().t("tc 1")),
            PlotCurve(x, pow(y,4), "testcurve2", PlotCurveStyle().lc(2).dt(2).y(2).t("tc 2"))
          },
          "test chart"
          );



  arma::mat speeds({0.00000000000000e+00,
                    8.00863930885529e+00,
                    1.39956803455724e+01,
                    2.40064794816415e+01});

  arma::mat angles({0.00000000000000e+00,
                    1.20000000000000e+01,2.40000000000000e+01,
                    3.60000000000000e+01,
                    4.80000000000000e+01,
                    6.00000000000000e+01,
                    7.20000000000000e+01,
                    8.40000000000000e+01,
                    9.60000000000000e+01,
                    1.08000000000000e+02,
                    1.20000000000000e+02,
                    1.32000000000000e+02,
                    1.44000000000000e+02,
                    1.56000000000000e+02,
                    1.68000000000000e+02,
                    1.80000000000000e+02
                   });
  arma::mat data(
              {
                  {1.44674041110111e-03,   1.26292869086357e-03,   1.17051397833190e-03,   9.89408147874028e-04},
                  {5.21228282760810e-01,   1.77238773977836e-01,   1.33601488854190e-01,   3.06149946053854e-01},
                  {9.10771560815408e-01,   3.65559793602828e-01,   2.63156166546883e-01,   6.47146107209196e-01},
                  {1.22359463411414e+00,   5.91932931288419e-01,   3.97504761641005e-01,   8.81134853687158e-01},
                  {1.47397979318172e+00,   8.55665420663656e-01,   5.67344308384438e-01,   1.05102089147725e+00},
                  {1.65183642652302e+00,   1.13871602172450e+00,   8.17410110283538e-01,   8.23966098079501e-01},
                  {1.68544860248306e+00,   1.22313120023117e+00,   9.91714383059956e-01,   8.59598441778847e-01},
                  {1.62114895310055e+00,   1.19670105871794e+00,   1.00612101569667e+00,   8.50337036342335e-01},
                  {1.54069000613177e+00,   1.19199444461861e+00,   1.04816611552179e+00,   9.32343391826804e-01},
                  {1.50143241812414e+00,   1.24121102616074e+00,   1.13551840039396e+00,   1.05494572970543e+00},
                  {1.44907260874614e+00,   1.22984087132864e+00,   1.13540963498087e+00,   1.07295321933389e+00},
                  {1.30563548214624e+00,   1.08044550290873e+00,   9.93126898398322e-01,   9.48069058320721e-01},
                  {1.10767223439304e+00,   8.93440277097412e-01,   8.12423861060594e-01,   7.71860617233546e-01},
                  {8.44901716804368e-01,   6.53190301872950e-01,   5.83491752059693e-01,   5.46772308994719e-01},
                  {4.93549729025130e-01,   3.54441099870770e-01,   3.08782314078393e-01,   2.83491004739245e-01},
                  {1.44579621404037e-03,   1.90036182425892e-03,   2.23317846218471e-03,   2.24205251958906e-03},
              });

  addPolarContourPlot(
              res, "testPolarContourChart",
              "$\\langle F \\rangle$",
              "$\\sqrt{\\langle \\ddot{\\xi}^2+\\ddot{\\eta}^2 \\rangle}$ / $m \\cdot s^{-2}$",
              24.,
              PlotField(angles, speeds, data),
              "some description",
              { 0.98 }, 0.98
              );

  res->writeLatexFile("out.tex"); // triggers rendering

  return 0;
}
